@using CompanyWeb.Data.Entities;
@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    List<dRecuitment> lstData = ViewBag.lstData;
    int i = 0;
}

<style>
    .modal-dialog {
        top: 70%;
        width: 50%
    }
</style>

<a class="btn btn-primary btn-flat btn-addon m-b-10 m-l-5" onclick="AddItem()"><i class="ti ti-plus"></i>Thêm mới</a>

<div class="card alert">
    <div class="card-header">
        <h4>Quản lý tuyển dụng </h4>
    </div>
    <div class="card-body">
        <table class="table table-responsive table-striped">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Tiêu đề</th>
                    <th>Thời gian</th>
                    <th>Vị trí công việc</th>
                    <th>Số lượng tuyển dụng</th>
                    <th>Trạng thái hiển thị</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in lstData)
                {
                    i++;
                    <tr>
                        <th scope="row">@i</th>
                        <td>@item.Title</td>
                        <td>@item.FromDate - @item.ToDate</td>
                        <td>@item.WorkPosition</td>
                        <td>@item.Quantity</td>
                        @if (item.Status == 1)
                        {
                            <td><span class="badge badge-primary">Đang sử dụng</span></td>
                        }
                        else
                        {
                            <td><span class="badge badge-default">Dừng sử dụng</span></td>
                        }
                        <td class="color-primary">
                            <a class="badge label-default" onclick="EditItem(@item.ID)"><i class="ti-pencil-alt2"></i></a> &nbsp;
                            <a class="badge label-danger" onclick="DelItem(@item.ID, 10)"><i class="ti-trash"></i></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div class="modal fade" id="mdAoEItem" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="lbName">New message</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <input type="hidden" id="hdID" />
                    <div class="form-group">
                        <label for="recipient-name" class="col-form-label">Tiêu đề:</label>
                        <input type="text" class="form-control" id="txtTitle">
                    </div>
                    <div class="form-group">
                        <label for="recipient-name" class="col-form-label">Vị trí chức vụ:</label>
                        <input type="text" class="form-control" id="txtPosition">
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-6">
                                <label for="recipient-name" class="col-form-label">Từ ngày:</label>
                                <input type="text" class="form-control" id="txtFromDate">
                            </div>
                            <div class="col-md-6">
                                <label for="recipient-name" class="col-form-label">Đến ngày:</label>
                                <input type="text" class="form-control" id="txtToDate">
                            </div>
                        </div>
                        
                    </div>
                    <div class="form-group">
                        <label for="recipient-name" class="col-form-label">Số lượng tuyển:</label>
                        <input type="text" class="form-control" id="txtQuantity">
                    </div>
                    <div class="form-group">
                        <label for="recipient-name" class="col-form-label">Địa điểm làm việc:</label>
                        <input type="text" class="form-control" id="txtWorkAddress">
                    </div>
                    <div class="form-group">
                        <label for="recipient-name" class="col-form-label">Yêu cầu:</label>
                        <textarea class="form-control" id="txtRequirement" rows="3"></textarea>
                    </div>
                    <div class="form-group">
                        <label for="recipient-name" class="col-form-label">Quyền lợi:</label>
                        <textarea class="form-control" id="txtTreatment" rows="3"></textarea>
                    </div>
                    <div class="form-group">
                        <label for="recipient-name" class="col-form-label">Mô tả công việc:</label>
                        <textarea class="form-control" id="txtContent" rows="3"></textarea>
                    </div>
                    <div class="form-group">
                        <label for="message-text" class="col-form-label">Trạng thái sử dụng:</label>
                        <div class="checkbox">
                            <label>
                                <input type="checkbox" id="checkUse"> Sử dụng
                            </label>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
                <a class="btn btn-primary btn-flat btn-addon m-b-10 m-l-5" onclick="SaveData()"><i class="ti ti-save"></i>Thêm mới</a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let editor1;
        let editor2;
        let editor3;
        ClassicEditor.create(document.querySelector('#txtRequirement'), {
            plugins: ['Essentials',
                'Paragraph',
                'Heading',
                'Bold',
                'Italic',
                'Underline',
                'Strikethrough',
                'SourceEditing',
                'Subscript',
                'Superscript',
                'Alignment',
                'Indent',
                'IndentBlock',
                'BlockQuote',
                'Link',
                'Image',
                'ImageCaption',
                'ImageStyle',
                'ImageToolbar',
                'ImageUpload',
                'List',
                'MediaEmbed',
                'PasteFromOffice',
                'Table',
                'TableToolbar',
                'TableProperties',
                'TableCellProperties',
                'Highlight',
                'FontFamily',
                'FontSize',
                'FontColor',
                'FontBackgroundColor', 'GeneralHtmlSupport', /* ... */]
        }).then(newEditor => {
            editor1 = newEditor;
        })
            .catch(error => {
                console.error(error);
            });
        ClassicEditor.create(document.querySelector('#txtTreatment'), {
            plugins: ['Essentials',
                'Paragraph',
                'Heading',
                'Bold',
                'Italic',
                'Underline',
                'Strikethrough',
                'SourceEditing',
                'Subscript',
                'Superscript',
                'Alignment',
                'Indent',
                'IndentBlock',
                'BlockQuote',
                'Link',
                'Image',
                'ImageCaption',
                'ImageStyle',
                'ImageToolbar',
                'ImageUpload',
                'List',
                'MediaEmbed',
                'PasteFromOffice',
                'Table',
                'TableToolbar',
                'TableProperties',
                'TableCellProperties',
                'Highlight',
                'FontFamily',
                'FontSize',
                'FontColor',
                'FontBackgroundColor', 'GeneralHtmlSupport', /* ... */]
        }).then(newEditor => {
            editor2 = newEditor;
        })
            .catch(error => {
                console.error(error);
            });
        ClassicEditor.create(document.querySelector('#txtContent'), {
            plugins: ['Essentials',
                'Paragraph',
                'Heading',
                'Bold',
                'Italic',
                'Underline',
                'Strikethrough',
                'SourceEditing',
                'Subscript',
                'Superscript',
                'Alignment',
                'Indent',
                'IndentBlock',
                'BlockQuote',
                'Link',
                'Image',
                'ImageCaption',
                'ImageStyle',
                'ImageToolbar',
                'ImageUpload',
                'List',
                'MediaEmbed',
                'PasteFromOffice',
                'Table',
                'TableToolbar',
                'TableProperties',
                'TableCellProperties',
                'Highlight',
                'FontFamily',
                'FontSize',
                'FontColor',
                'FontBackgroundColor', 'GeneralHtmlSupport', /* ... */]
        }).then(newEditor => {
            editor3 = newEditor;
        })
            .catch(error => {
                console.error(error);
            });
    </script>
    <script>
        function AddItem() {
            $('#mdAoEItem').modal('show');
            $('#txtTitle').val('');
            $('#txtPosition').val('');
            $('#txtFromDate').val('');
            $('#txtToDate').val('');
            $('#txtQuantity').val('0');
            editor1.setData('');
            editor2.setData('');
            editor3.setData('');
            $('#txtWorkAddress').val('');
            $('#hdID').val('0');
            $('#checkUse').prop('checked', true);
            $('#lbName').text('Thêm mới bản ghi');
        }

        function EditItem(ID) {
            $('#mdAoEItem').modal('show');
            $('#lbName').text('Chỉnh sửa bản ghi');
            $.ajax({
                async: false,
                url: '/Admin/dRecruitment/GetDetail',
                data: { ID: ID },
                type: 'GET',
                cache: false,
                success: function (res) {
                    if (res.status == true) {
                        $('#txtTitle').val(res.data1.title);
                        $('#txtPosition').val(res.data1.position);
                        $('#txtFromDate').val(res.data1.fromDate);
                        $('#txtToDate').val(res.data1.toDate);
                        $('#txtQuantity').val(res.data1.quantity);
                        $('#txtWorkAddress').val(res.data1.workAddress);
                        editor1.setData(res.data1.requirement);
                        editor2.setData(res.data1.treatment);
                        editor3.setData(res.data1.content);
                        $('#hdID').val(ID);
                        if (res.data1.status == 1) {
                            $('#checkUse').prop('checked', true);
                        }
                        else {
                            $('#checkUse').prop('checked', false);
                        }
                    } else {
                        toastr.error(res.mess, 'Lỗi!', 5000);
                    }
                },
                error: function () {
                    toastr.error('Có lỗi xảy ra, vui lòng thử lại sau', 'Lỗi!', 5000);
                }
            })
        }

        function SaveData() {
            var title = $('#txtTitle').val();
            var ID = $('#hdID').val();
            var Position = $('#txtPosition').val();
            var FromDate = $('#txtFromDate').val();
            var ToDate = $('#txtToDate').val();
            var Quantity = $('#txtQuantity').val();
            var WorkAddress = $('#txtWorkAddress').val();
            var Requirement = editor1.getData();
            var Treatment = editor2.getData();
            var Content = editor3.getData();
            var status = $('#checkUse').prop("checked") ? 1 : 0;
            if (title == '') {
                toastr.error('Chưa nhập tên sản phẩm!', 'Thông báo', {
                    "positionClass": "toast-top-right",
                    timeOut: 5000,
                    "closeButton": true,
                    "debug": false,
                    "newestOnTop": true,
                    "progressBar": true,
                    "preventDuplicates": true,
                    "onclick": null,
                    "showDuration": "300",
                    "hideDuration": "1000",
                    "extendedTimeOut": "1000",
                    "showEasing": "swing",
                    "hideEasing": "linear",
                    "showMethod": "fadeIn",
                    "hideMethod": "fadeOut",
                    "tapToDismiss": false
                });
                return false;
            }
            var formD = new FormData();
            formD.append('ID', ID);
            formD.append('Title', title);
            formD.append('Position', Position);
            formD.append('FromDate', FromDate);
            formD.append('ToDate', ToDate);
            formD.append('Quantity', Quantity);
            formD.append('WorkAddress', WorkAddress);
            formD.append('Requirement', Requirement);
            formD.append('Treatment', Treatment);
            formD.append('Content', Content);
            formD.append('Status', status);
            $.ajax({
                async: false,
                url: '/Admin/dRecruitment/SaveData',
                data: formD,
                type: 'POST',
                cache: false,
                contentType: false,
                processData: false,
                success: function (res) {
                    if (res.status == true) {
                        toastr.success(res.mess, 'Thông báo', {
                            "positionClass": "toast-top-right",
                            timeOut: 5000,
                            "closeButton": true,
                            "debug": false,
                            "newestOnTop": true,
                            "progressBar": true,
                            "preventDuplicates": true,
                            "onclick": null,
                            "showDuration": "300",
                            "hideDuration": "1000",
                            "extendedTimeOut": "1000",
                            "showEasing": "swing",
                            "hideEasing": "linear",
                            "showMethod": "fadeIn",
                            "hideMethod": "fadeOut",
                            "tapToDismiss": false
                        });
                        setTimeout(function () {
                            location.href = '/Admin/dRecruitment/Index';
                        }, 1000);
                    } else {
                        toastr.error(res.mess, 'Lỗi!', 5000);
                    }
                },
                error: function () {
                    toastr.error('Có lỗi xảy ra, vui lòng thử lại sau', 'Lỗi!', 5000);
                }
            });
        }

        function DelItem(ID, sta) {
            $.ajax({
                async: false,
                url: '/Admin/dRecruitment/ChangeStatus',
                data: {
                    ID: ID,
                    Status: sta
                },
                type: 'POST',
                cache: false,
                success: function (res) {
                    if (res.status == true) {
                        if (res.data.Status == true) {
                            toastr.success(res.mess, 'Thông báo', {
                                "positionClass": "toast-top-right",
                                timeOut: 5000,
                                "closeButton": true,
                                "debug": false,
                                "newestOnTop": true,
                                "progressBar": true,
                                "preventDuplicates": true,
                                "onclick": null,
                                "showDuration": "300",
                                "hideDuration": "1000",
                                "extendedTimeOut": "1000",
                                "showEasing": "swing",
                                "hideEasing": "linear",
                                "showMethod": "fadeIn",
                                "hideMethod": "fadeOut",
                                "tapToDismiss": false
                            });
                            setTimeout(function () {
                                location.href = '/Admin/dRecruitment/Index';
                            }, 1000);
                        }
                        else {
                            toastr.error(res.mess, 'Lỗi!', 5000);
                        }
                    } else {
                        toastr.error(res.mess, 'Lỗi!', 5000);
                    }
                },
                error: function () {
                    toastr.error('Có lỗi xảy ra, vui lòng thử lại sau', 'Lỗi!', 5000);
                }
            })
        }
    </script>
}